x = "Inflación Mediana",
y = "Puntuación de Corrupción Promedio",
color = "Cluster (K-means)")
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
df <- read.csv("inflation_corruption_1995_2023_Ruben_Valverde.csv")
head(df[0:6])
# Nota: El resto de columnas son repeticiones de las columnas 3, 4 y 5 por lo que mostrarlas no aportan más información y empeoran la estética
summary(df[0:6])
# Contar valores "no data" en cada columna
inflation <- df[, grepl("inflation", names(df))]
no_data_count <- colSums(inflation == "no data", na.rm = TRUE)
print(paste("Hay un total de", sum(no_data_count), "valores 'no data'"))
# Reemplazar los valores "no data" por NA en todo el DataFrame porque da problemas al conteo
df[df == "no data"] <- NA
# Convertir las columnas de inflación de 1995 a 2023 a valores numéricos
for (year in 1995:2023) {
column <- paste("inflation", year, sep = "_")
df[[column]] <- as.numeric(df[[column]])
}
# Contar y mostrar el número de valores nulos por columna
print(paste("Hay un total de", sum(is.na(df)), "valores nulos"))
# Transformar el DataFrame de formato ancho a formato largo para poder analizar los datos de inflación, puntuación y rango a lo largo del tiempo posteriormente
df_melted <- df %>%
pivot_longer(cols = starts_with("inflation_") | starts_with("score_") | starts_with("rank_"),
names_to = c(".value", "year"),
names_sep = "_") %>%
select(country, iso, region, year, inflation, score, rank)
# Convertir las columnas 'inflation', 'rank', 'score' y 'year' a tipo numérico en el DataFrame df_melted
df_melted <- df_melted %>%
mutate(across(c(inflation, rank, score, year), as.numeric))
head(df_melted)
summary(df_melted)
# Crear un DataFrame con la inflación promedio anual por región
df_avg_inflation <- df_melted %>%
group_by(region, year) %>%
summarise(inflation = median(inflation, na.rm = TRUE), .groups = "drop") %>%
ungroup()
# Nota: Se utilizó la mediana en lugar del promedio para evitar que valores extremos afecten el resultado (Como la inflación de 1995 en Europa Oriental y Asia Central causada por Bulgaria y Venezuela en América)
# Ajustar el tamaño de los gráficos
knitr::opts_chunk$set(fig.width=20, fig.height=6.5)
# Agregar un tema a los gráficos
theme_set(theme_bw())
# Hacer las letras más grandes y los títulos centrados
theme_update(
plot.title = element_text(size = 20, hjust = 0.5),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)
)
# Crear el lineplot
ggplot(df_avg_inflation, aes(x = year, y = inflation, color = region, group = region)) +
geom_line(size=1.5) +
scale_y_continuous(limits = c(0, 23)) +
geom_text(data = df_avg_inflation %>% filter(inflation > 23),
aes(label = round(inflation, 1), y = 23),
color = "green", size = 3, vjust = -0.5) +
geom_point(size=5) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Evolución de la Inflación Promedio Anual por Región",
x = "Año",
y = "Inflación Promedio",
color = "Región")
# Al ejecutar el gráfico previamente se podia observar que el formato del CPI cambió en 2012, siendo 100 la puntuación máxima en lugar de 10.
df_melted %>%
filter(year %in% c(2010, 2011, 2012, 2013)) %>%
group_by(region, year) %>%
summarise(score = mean(score, na.rm = TRUE), .groups = "drop") %>%
head(4)
# Multiplico por 10 el CPI de los años 1995 hasta 2011 para que estén en la misma escala que los años posteriores
df_melted <- df_melted %>%
mutate(score = ifelse(year >= 1995 & year <= 2011, score * 10, score))
# Calcular el CPI promedio anual por región
df_avg_score <- df_melted %>%
group_by(region, year) %>%
summarise(score = mean(score, na.rm = TRUE), .groups = "drop") %>%
ungroup()
# Eliminar filas con valores nulos en la columna 'score', provocaban warnings
df_avg_score <- df_avg_score %>% drop_na(score)
# Crear el lineplot
ggplot(df_avg_score, aes(x = year, y = score, color = region, group = region)) +
geom_line(size=1.5) +
geom_point(size=5) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Evolución del Indice de Percepción de Corrupción Promedio Anual (CPI) por Región",
x = "Año",
y = "CPI Promedio",
color = "Región")
# Calculo los valores medios de inflación y puntuación de corrupción por país
df_avg <- df_melted %>%
group_by(country, region) %>%
summarise(
inflation = median(inflation, na.rm = TRUE),
score = mean(score, na.rm = TRUE), .groups = "drop"
) %>%
arrange(region, country)
# Nota1: ordeno por región y país para que el hue siga el mismo orden que el resto
# Nota2: utilizo la mediana para la inflación para evitar que valores extremos como los de Bulgaria y Venezuela ya mencionados.
# Crear el scatter plot para visualizar la correlación entre inflación y puntuación de corrupción
# Crear el scatter plot con una línea de regresión única para todas las regiones pero sin el scatter (Quiero una única linea de regresión)
G_inf_corr <- ggplot(df_avg, aes(x = inflation, y = score, color = region)) +
geom_point(size = 5) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", size = 2.5, color = "black", formula = y ~ x) +
scale_color_brewer(palette = "Dark2") +
labs(
title = "Correlación entre Inflación y Puntuación de Corrupción por País",
x = "Inflación Mediana",
y = "Puntuación de Corrupción Promedio",
color = "Región"
)
print(G_inf_corr)
# Calcular el coeficiente de correlación de Spearman
corr_test <- cor.test(df_melted$inflation, df_melted$score,
method = "spearman", use = "complete.obs",
exact = FALSE)
# Nota:
# Nota: Me saltaba el error de que no era posible calcular el coeficiente exacto, por lo que lo he puesto en FALSE, es decir, que no se calcula exactamente.
# Definir el nivel de significancia
alpha <- 0.05
# Mostrar los resultados
cat("Coeficiente de Correlación de Spearman's Rank:", corr_test$estimate, "\n")
if (corr_test$p.value < alpha) {
cat("p-valor:", corr_test$p.value, ", Se rechaza la hipótesis nula\n")
} else {
cat("p-valor:", corr_test$p.value, ", No se rechaza la hipótesis nula\n")
}
# Calcular la correlación entre 'inflation' y 'score' por año
correlation_by_year <- df_melted %>%
group_by(year) %>%
summarise(correlation = cor(inflation, score, method = "spearman", use = "complete.obs"))
# Crear un barplot de la correlación por año
ggplot(correlation_by_year, aes(x = year)) +
geom_bar(aes(y = correlation, fill = correlation), stat = "identity", color = "white") +
scale_fill_gradient2(low = "#ff0000", high = "#77ff00", mid = "#6600ff", midpoint = -0.15) +
geom_bar(data = df_melted %>% group_by(year) %>% summarise(median_inflation = median(inflation, na.rm = TRUE)),
aes(y = median_inflation / 10), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(data = df_melted %>% group_by(year) %>% summarise(median_inflation = median(inflation, na.rm = TRUE)),
aes(y = median_inflation / 10, label = round(median_inflation, 2)), vjust = -0.5, size = 4, color = "#000000") +
geom_text(aes(y = correlation, label = round(correlation, 2)), vjust = 1.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "              Correlación          Inflación Mediana (Escala 1:10)",
fill = "Correlación")
# Seleccionar las columnas 'inflation' y 'score' para el clustering
df_cluster <- df_avg[, c("inflation", "score")]
# Normalizar los datos para que tengan media 0 y desviación estándar 1
df_cluster_norm <- scale(na.omit(df_cluster))
# Mostrar los primeros registros del DataFrame normalizado
head(df_cluster_norm)
# Aplicar el algoritmo de K-means al DataFrame normalizado 'df_cluster_norm'
# - centers: número de clusters a formar (en este caso, 6, el número de regiones)
# - nstart: número de veces que el algoritmo de K-means se ejecutará con diferentes centroides iniciales (en este caso, 177, el número de países)
set.seed(123)
kmeans_model <- kmeans(df_cluster_norm, centers = 6, nstart = 177)
# Añadir los clusters resultantes del modelo K-means al DataFrame original 'df_avg'
# Lo convierto a factor para que se muestre en el gráfico como datos categóricos
df_avg$kmeans_cluster <- as.factor(kmeans_model$cluster)
print(head(df_avg))
# Graficar los clusters de K-means
ggplot(df_avg, aes(x = inflation, y = score, color = kmeans_cluster)) +
geom_point(size = 5) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Clustering de Países por Inflación y Puntuación de Corrupción (K-means)",
x = "Inflación Mediana",
y = "Puntuación de Corrupción Promedio",
color = "Cluster (K-means)")
df_avg_score.group_by(year)
df_avg_score_inf <- df_melted %>%
group_by(year) %>%
summarise(
inflation = median(inflation, na.rm = TRUE),
score = mean(score, na.rm = TRUE), .groups = "drop"
)
library(tidyr)
library(dplyr)
library(ggplot2)
library(ggthemes)
library(RColorBrewer)
df <- read.csv("inflation_corruption_1995_2023_Ruben_Valverde.csv")
head(df[0:6])
# Nota: El resto de columnas son repeticiones de las columnas 3, 4 y 5 por lo que mostrarlas no aportan más información y empeoran la estética
summary(df[0:6])
# Contar valores "no data" en cada columna
inflation <- df[, grepl("inflation", names(df))]
no_data_count <- colSums(inflation == "no data", na.rm = TRUE)
print(paste("Hay un total de", sum(no_data_count), "valores 'no data'"))
# Reemplazar los valores "no data" por NA en todo el DataFrame porque da problemas al conteo
df[df == "no data"] <- NA
# Convertir las columnas de inflación de 1995 a 2023 a valores numéricos
for (year in 1995:2023) {
column <- paste("inflation", year, sep = "_")
df[[column]] <- as.numeric(df[[column]])
}
# Contar y mostrar el número de valores nulos por columna
print(paste("Hay un total de", sum(is.na(df)), "valores nulos"))
# Transformar el DataFrame de formato ancho a formato largo para poder analizar los datos de inflación, puntuación y rango a lo largo del tiempo posteriormente
df_melted <- df %>%
pivot_longer(cols = starts_with("inflation_") | starts_with("score_") | starts_with("rank_"),
names_to = c(".value", "year"),
names_sep = "_") %>%
select(country, iso, region, year, inflation, score, rank)
# Convertir las columnas 'inflation', 'rank', 'score' y 'year' a tipo numérico en el DataFrame df_melted
df_melted <- df_melted %>%
mutate(across(c(inflation, rank, score, year), as.numeric))
head(df_melted)
summary(df_melted)
# Crear un DataFrame con la inflación promedio anual por región
df_avg_inflation <- df_melted %>%
group_by(region, year) %>%
summarise(inflation = median(inflation, na.rm = TRUE), .groups = "drop") %>%
ungroup()
# Nota: Se utilizó la mediana en lugar del promedio para evitar que valores extremos afecten el resultado (Como la inflación de 1995 en Europa Oriental y Asia Central causada por Bulgaria y Venezuela en América)
# Ajustar el tamaño de los gráficos
knitr::opts_chunk$set(fig.width=20, fig.height=6.5)
# Agregar un tema a los gráficos
theme_set(theme_bw())
# Hacer las letras más grandes y los títulos centrados
theme_update(
plot.title = element_text(size = 20, hjust = 0.5),
axis.title = element_text(size = 16),
axis.text = element_text(size = 14),
legend.title = element_text(size = 16),
legend.text = element_text(size = 14)
)
# Crear el lineplot
ggplot(df_avg_inflation, aes(x = year, y = inflation, color = region, group = region)) +
geom_line(size=1.5) +
scale_y_continuous(limits = c(0, 23)) +
geom_text(data = df_avg_inflation %>% filter(inflation > 23),
aes(label = round(inflation, 1), y = 23),
color = "green", size = 3, vjust = -0.5) +
geom_point(size=5) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Evolución de la Inflación Promedio Anual por Región",
x = "Año",
y = "Inflación Promedio",
color = "Región")
# Al ejecutar el gráfico previamente se podia observar que el formato del CPI cambió en 2012, siendo 100 la puntuación máxima en lugar de 10.
df_melted %>%
filter(year %in% c(2010, 2011, 2012, 2013)) %>%
group_by(region, year) %>%
summarise(score = mean(score, na.rm = TRUE), .groups = "drop") %>%
head(4)
# Multiplico por 10 el CPI de los años 1995 hasta 2011 para que estén en la misma escala que los años posteriores
df_melted <- df_melted %>%
mutate(score = ifelse(year >= 1995 & year <= 2011, score * 10, score))
# Calcular el CPI promedio anual por región
df_avg_score <- df_melted %>%
group_by(region, year) %>%
summarise(score = mean(score, na.rm = TRUE), .groups = "drop") %>%
ungroup()
# Eliminar filas con valores nulos en la columna 'score', provocaban warnings
df_avg_score <- df_avg_score %>% drop_na(score)
# Crear el lineplot
ggplot(df_avg_score, aes(x = year, y = score, color = region, group = region)) +
geom_line(size=1.5) +
geom_point(size=5) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Evolución del Indice de Percepción de Corrupción Promedio Anual (CPI) por Región",
x = "Año",
y = "CPI Promedio",
color = "Región")
# Calculo los valores medios de inflación y puntuación de corrupción por país
df_avg <- df_melted %>%
group_by(country, region) %>%
summarise(
inflation = median(inflation, na.rm = TRUE),
score = mean(score, na.rm = TRUE), .groups = "drop"
) %>%
arrange(region, country)
# Nota1: ordeno por región y país para que el hue siga el mismo orden que el resto
# Nota2: utilizo la mediana para la inflación para evitar que valores extremos como los de Bulgaria y Venezuela ya mencionados.
# Crear el scatter plot para visualizar la correlación entre inflación y puntuación de corrupción
# Crear el scatter plot con una línea de regresión única para todas las regiones pero sin el scatter (Quiero una única linea de regresión)
G_inf_corr <- ggplot(df_avg, aes(x = inflation, y = score, color = region)) +
geom_point(size = 5) +
geom_smooth(method = "lm", se = FALSE, linetype = "dashed", size = 2.5, color = "black", formula = y ~ x) +
scale_color_brewer(palette = "Dark2") +
labs(
title = "Correlación entre Inflación y Puntuación de Corrupción por País",
x = "Inflación Mediana",
y = "Puntuación de Corrupción Promedio",
color = "Región"
)
print(G_inf_corr)
# Calcular el coeficiente de correlación de Spearman
corr_test <- cor.test(df_melted$inflation, df_melted$score,
method = "spearman", use = "complete.obs",
exact = FALSE)
# Nota:
# Nota: Me saltaba el error de que no era posible calcular el coeficiente exacto, por lo que lo he puesto en FALSE, es decir, que no se calcula exactamente.
# Definir el nivel de significancia
alpha <- 0.05
# Mostrar los resultados
cat("Coeficiente de Correlación de Spearman's Rank:", corr_test$estimate, "\n")
if (corr_test$p.value < alpha) {
cat("p-valor:", corr_test$p.value, ", Se rechaza la hipótesis nula\n")
} else {
cat("p-valor:", corr_test$p.value, ", No se rechaza la hipótesis nula\n")
}
# Calcular la correlación entre 'inflation' y 'score' por año
correlation_by_year <- df_melted %>%
group_by(year) %>%
summarise(correlation = cor(inflation, score, method = "spearman", use = "complete.obs"))
# Crear un barplot de la correlación por año
ggplot(correlation_by_year, aes(x = year)) +
geom_bar(aes(y = correlation, fill = correlation), stat = "identity", color = "white") +
scale_fill_gradient2(low = "#ff0000", high = "#77ff00", mid = "#6600ff", midpoint = -0.15) +
geom_bar(data = df_melted %>% group_by(year) %>% summarise(median_inflation = median(inflation, na.rm = TRUE)),
aes(y = median_inflation / 10), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(data = df_melted %>% group_by(year) %>% summarise(median_inflation = median(inflation, na.rm = TRUE)),
aes(y = median_inflation / 10, label = round(median_inflation, 2)), vjust = -0.5, size = 4, color = "#000000") +
geom_text(aes(y = correlation, label = round(correlation, 2)), vjust = 1.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "              Correlación          Inflación Mediana (Escala 1:10)",
fill = "Correlación")
# Seleccionar las columnas 'inflation' y 'score' para el clustering
df_cluster <- df_avg[, c("inflation", "score")]
# Normalizar los datos para que tengan media 0 y desviación estándar 1
df_cluster_norm <- scale(na.omit(df_cluster))
# Mostrar los primeros registros del DataFrame normalizado
head(df_cluster_norm)
# Aplicar el algoritmo de K-means al DataFrame normalizado 'df_cluster_norm'
# - centers: número de clusters a formar (en este caso, 6, el número de regiones)
# - nstart: número de veces que el algoritmo de K-means se ejecutará con diferentes centroides iniciales (en este caso, 177, el número de países)
set.seed(123)
kmeans_model <- kmeans(df_cluster_norm, centers = 6, nstart = 177)
# Añadir los clusters resultantes del modelo K-means al DataFrame original 'df_avg'
# Lo convierto a factor para que se muestre en el gráfico como datos categóricos
df_avg$kmeans_cluster <- as.factor(kmeans_model$cluster)
print(head(df_avg))
# Graficar los clusters de K-means
ggplot(df_avg, aes(x = inflation, y = score, color = kmeans_cluster)) +
geom_point(size = 5) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Clustering de Países por Inflación y Puntuación de Corrupción (K-means)",
x = "Inflación Mediana",
y = "Puntuación de Corrupción Promedio",
color = "Cluster (K-means)")
df_avg_score_inf <- df_melted %>%
group_by(year) %>%
summarise(
inflation = median(inflation, na.rm = TRUE),
score = mean(score, na.rm = TRUE), .groups = "drop"
)
df_avg_score_inf <- df_melted %>%
group_by(year) %>%
summarise(
inflation = median(inflation, na.rm = TRUE),
score = mean(score, na.rm = TRUE), .groups = "drop"
)
print(df_avg_score_inf)
{r correlacion por año, echo=TRUE, warning=FALSE}
# Calcular la correlación entre 'inflation' y 'score' por año
correlation_by_year <- df_melted %>%
group_by(year) %>%
summarise(correlation = cor(inflation, score, method = "spearman", use = "complete.obs"))
# Crear un barplot de la correlación por año
ggplot(correlation_by_year, aes(x = year)) +
geom_bar(aes(y = correlation, fill = correlation), stat = "identity", color = "white") +
scale_fill_gradient2(low = "#ff0000", high = "#77ff00", mid = "#6600ff", midpoint = -0.15) +
geom_bar(data = df_melted %>% group_by(year) %>% summarise(median_inflation = median(inflation, na.rm = TRUE)),
aes(y = median_inflation / 10), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(data = df_melted %>% group_by(year) %>% summarise(median_inflation = median(inflation, na.rm = TRUE)),
aes(y = median_inflation / 10, label = round(median_inflation, 2)), vjust = -0.5, size = 4, color = "#000000") +
geom_text(aes(y = correlation, label = round(correlation, 2)), vjust = 1.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "              Correlación          Inflación Mediana (Escala 1:10)",
fill = "Correlación")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf ),
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf ) aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = 1.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "              Correlación          Inflación Mediana (Escala 1:10)",
fill = "Correlación")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = 1.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "              Correlación          Inflación Mediana (Escala 1:10)",
fill = "Correlación")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = -0.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "              Correlación          Inflación Mediana (Escala 1:10)",
fill = "Correlación")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = -10.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "              Correlación          Inflación Mediana (Escala 1:10)",
fill = "Correlación")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = -10.1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = -1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = 1, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
geom_text(aes(y = score, label = round(score, 2)), vjust = 10, size = 4) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score /5 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
# Crear un barplot de la correlación por año
ggplot(df_avg_score_inf, aes(x = year)) +
geom_bar(aes(y = score/10 * -1, fill = 'red',alpha = 0.3), stat = "identity", color = "white") +
geom_bar(data = df_avg_score_inf, aes(y = inflation), stat = "identity", fill = 'blue', alpha = 0.3) +
scale_color_brewer(palette = "Dark2") +
labs(title = "Correlación entre Inflación y Puntuación de Corrupción por Año",
x = "Año",
y = "Score          Inflación Mediana",
fill = "score")
